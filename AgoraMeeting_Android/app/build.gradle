apply plugin: 'com.android.application'
apply plugin: "androidx.navigation.safeargs"

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    viewBinding {
        enabled = true
    }
    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "io.agora.meeting"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.meeting.versionCode
        versionName rootProject.ext.meeting.versionName

        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters 'armeabi-v7a', 'x86'
        }
    }

    signingConfigs {
        release {
            def prpe = new Properties()
            def input = project.rootProject.file('local.properties').newInputStream();
            prpe.load(input)
            storeFile prpe.getProperty('sign.store.file') == null ? signingConfigs.debug.storeFile : new File(prpe.getProperty('sign.store.file'))
            storePassword prpe.getProperty('sign.store.password') == null ? signingConfigs.debug.storePassword : prpe.getProperty('sign.store.password')
            keyAlias prpe.getProperty('sign.alias') == null ? signingConfigs.debug.keyAlias : prpe.getProperty('sign.alias')
            keyPassword prpe.getProperty('sign.alias.password') == null ? signingConfigs.debug.keyPassword : prpe.getProperty('sign.alias.password')
        }
    }


    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${rootProject.ext.dependencies['com.squareup.leakcanary:leakcanary-android']}"

    implementation rootProject.findProject(':meeting-ui') != null ? project(':meeting-ui') : "io.github.agoraio-usecase.meeting:meeting-ui:${rootProject.ext.maven_version['io.github.agoraio-usecase.meeting:meeting-ui']}"
    implementation rootProject.findProject(':meeting-core') != null ? project(':meeting-core') : "io.github.agoraio-usecase.meeting:meeting-core:${rootProject.ext.maven_version['io.github.agoraio-usecase.meeting:meeting-core']}"

}
