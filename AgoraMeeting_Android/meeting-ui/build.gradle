apply plugin: 'com.android.library'
apply plugin: "androidx.navigation.safeargs"
import java.text.SimpleDateFormat

def safeExtGet(prop, key, fallback) {
    if (rootProject.ext.has(prop)) {
        def map = rootProject.ext.get(prop)
        if (map.containsKey(key)) {
            return map.get(key)
        }
    }
    return fallback
}


// add the maven publish script if existed
def maven_gradle_path = "${rootDir.absolutePath}/maven.gradle"
if (new File(maven_gradle_path).exists()) {
    apply from: maven_gradle_path
}

// special the version using when publishing to maven
// the group name is defined in setting.gradle
project.group="io.github.agoraio-usecase.meeting"
project.version="${safeExtGet('meeting', 'versionName', '1.0.0')}"
project.description = "AgoraMeetingUi"
project.ext.url = "https://bitbucket.agoralab.co/projects/ADUC/repos/cloudmeeting-android/browse/AgoraMeeting_Android/meeting-ui?at=refs%2Fheads%2Fdev%2Fandroid_210114"

android {
    compileSdkVersion safeExtGet('android', 'compileSdkVersion', 29)
    buildToolsVersion safeExtGet('android', 'buildToolsVersion', '29.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('android', 'minSdkVersion', 19)
        targetSdkVersion safeExtGet('android', 'minSdkVersion', 29)
        versionCode safeExtGet('meeting', 'versionCode', 1)
        versionName safeExtGet('meeting', 'versionName', '1.0.0')

        vectorDrawables.useSupportLibrary = true
        consumerProguardFiles 'consumer-rules.pro'

        buildConfigField 'String', 'BUILD_TIME', "\"${new SimpleDateFormat("yyyy.MM.dd").format(new Date())}\""
        buildConfigField 'String', 'RTC_VERSION', "\"${safeExtGet('dependencies', 'io.agora.rtc:full-sdk', '3.2.1')}\""
        buildConfigField 'String', 'RTM_VERSION', "\"${safeExtGet('dependencies', 'io.agora.rtm:rtm-sdk', '1.2.2')}\""
        buildConfigField 'String', 'WHITEBOARD_VERSION', "\"${safeExtGet('dependencies', 'com.github.duty-os:white-sdk-android', '2.6.4')}\""
    }

    viewBinding {
        enabled = true
    }
    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(':meeting-core')
    implementation project(':whiteboard')

    implementation "androidx.constraintlayout:constraintlayout:${safeExtGet('dependencies', 'androidx.constraintlayout:constraintlayout', '1.1.3')}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${safeExtGet('dependencies', 'androidx.swiperefreshlayout:swiperefreshlayout', '1.0.0')}"
    implementation "androidx.navigation:navigation-fragment:${safeExtGet('dependencies', 'androidx.navigation:navigation-fragment', '2.2.2')}"
    implementation "androidx.lifecycle:lifecycle-extensions:${safeExtGet('dependencies', 'androidx.lifecycle:lifecycle-extensions', '2.2.0')}"
    implementation "androidx.recyclerview:recyclerview:${safeExtGet('dependencies', 'androidx.recyclerview:recyclerview', '1.1.0')}"
    implementation "com.google.android.material:material:${safeExtGet('dependencies', 'com.google.android.material:material', '1.1.0')}"
    implementation "androidx.preference:preference:${safeExtGet('dependencies', 'androidx.preference:preference', '1.1.1')}"

    implementation "com.yanzhenjie:permission:${safeExtGet('dependencies', 'com.yanzhenjie:permission', '2.0.3')}"
    implementation "com.github.QuadFlask:colorpicker:${safeExtGet('dependencies', 'com.github.QuadFlask:colorpicker', '0.0.15')}"
    implementation "com.github.razerdp:BasePopup:${safeExtGet('dependencies', 'com.github.razerdp:BasePopup', '2.2.3')}"
    implementation "com.jeremyliao:live-event-bus-x:${safeExtGet('dependencies', 'com.jeremyliao:live-event-bus-x', '1.6.1')}"
    implementation "q.rorbin:badgeview:${safeExtGet('dependencies', 'q.rorbin:badgeview', '1.1.3')}"
    implementation "com.github.bumptech.glide:glide:${safeExtGet('dependencies', 'com.github.bumptech.glide:glide', '4.12.0')}"
    annotationProcessor "com.github.bumptech.glide:compiler:${safeExtGet('dependencies', 'com.github.bumptech.glide:compiler', '4.12.0')}"
    implementation "com.contrarywind:wheelview:${safeExtGet('dependencies', 'com.contrarywind:wheelview', '4.1.0')}"

    implementation "com.tencent.bugly:crashreport:${safeExtGet('dependencies', 'com.tencent.bugly:crashreport', '3.3.7')}"
    implementation "com.tencent.bugly:nativecrashreport:${safeExtGet('dependencies', 'com.tencent.bugly:nativecrashreport', '3.6.0.1')}"

    api "androidx.appcompat:appcompat:${safeExtGet('dependencies', 'androidx.appcompat:appcompat', '1.1.0')}"
}
